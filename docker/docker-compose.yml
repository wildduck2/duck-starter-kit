version: '3.8'

name: ${COMPOSE_PROJECT_NAME}

services:
  # --- NestJS Backend ---
  chat-server:
    container_name: chat-server-dev
    build:
      context: ..
      dockerfile: apps/chat-server/Dockerfile
    ports:
      - '3000:3000'
    environment:
      NEON_DATABASE_URL: 'postgres://admin:securepassword@postgres:5432/nestdb'
      REDIS_URL: 'redis://redis:6379'
      PORT: '3000'
    volumes:
      - ..:/app:cached
      - /app/apps/chat-server/node_modules
      - /app/node_modules
    working_dir: /app/apps/chat-server
    command: pnpm run start:dev
    depends_on:
      - postgres
      - redis
    networks:
      - nest-net

  # --- PostgreSQL ---
  postgres:
    container_name: postgres-dev
    image: postgres:16
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'securepassword'
      POSTGRES_DB: 'nestdb'
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - nest-net

  # --- Redis ---
  redis:
    container_name: redis-dev
    image: redis:7
    restart: always
    ports:
      - '6380:6379'
    networks:
      - nest-net

  # --- Drizzle Studio ---
  drizzle:
    container_name: drizzle-dev
    build:
      context: ..
      dockerfile: packages/db/Dockerfile
    ports:
      - '4983:4983'
    environment:
      NEON_DATABASE_URL: "postgres://admin:securepassword@postgres:5432/nestdb"
    volumes:
      - ..:/app:cached
      - /app/packages/db/node_modules
    working_dir: /app/packages/db/
    command: sh -c "pnpm run db:start"
    depends_on:
      - postgres
      - redis
    networks:
      - nest-net

  # --- MailHog (Email testing server) ---
  mailhog:
    container_name: mailhog-dev
    image: mailhog/mailhog
    restart: always
    ports:
      - '1025:1025'   # SMTP
      - '8025:8025'   # Web UI
    networks:
      - nest-net


volumes:
  postgres-dev-data:

networks:
  nest-net:
    driver: bridge
